name: CI/CD Pipeline for Simple Time Service Application

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        working-directory: ./app
        run: |
          docker build -t $ECR_REPOSITORY:latest .

      - name: Tag Docker Image
        run: |
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Push Docker Image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Validate Terraform Configuration
        working-directory: ./terraform
        run: terraform validate

      - name: Plan Terraform Deployment
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Apply Terraform Deployment
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
